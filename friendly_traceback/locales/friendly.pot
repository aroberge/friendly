# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-03 12:47-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=cp1252\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: __init__.py:186 __main__.py:202
msgid "The file {filename} does not exist."
msgstr ""

#: config.py:73 config.py:198
msgid "Nothing to show: no exception recorded."
msgstr ""

#: console.py:63
msgid ""
"\n"
"    Installed version of Rich is too old.\n"
"\n"
msgstr ""

#: console.py:65
msgid ""
"\n"
"    Rich is not installed.\n"
"\n"
msgstr ""

#: console.py:181
msgid "Warning: you added a type hint to the python builtin {name}."
msgstr ""

#: console.py:184
msgid ""
"Warning: you used a type hint for a variable without assigning it a value.\n"
msgstr ""

#: console.py:187
msgid "Instead of {hint}, perhaps you meant {assignment}."
msgstr ""

#: console.py:259
msgid "Warning: you have redefined the python builtin {name}."
msgstr ""

#: core.py:334 core.py:371
msgid "Python exception:"
msgstr ""

#: core.py:394
msgid ""
"Warning: improperly formed exception.\n"
"I suspect that a custom exception has been raised\n"
"with a non-string value used as a message.\n"
"This can occur if a `__repr__` or a `__str__` method\n"
"raises an exception or does not return a string.\n"
msgstr ""

#: core.py:428 core.py:474
msgid "Likely cause based on the information given by Python:"
msgstr ""

#: core.py:469
msgid "Python's error message (invalid syntax) cannot be used to identify the problem:"
msgstr ""

#: core.py:540
msgid ""
"{filename} is not a regular Python file whose contents can be analyzed.\n"
msgstr ""

#: core.py:546
msgid ""
"Exception raised on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:581
msgid ""
"Execution stopped on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:600
msgid ""
"`{filename}` is not a regular Python file whose contents\n"
"can be analyzed.\n"
msgstr ""

#: core.py:611
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
"beyond the location indicated by --> and ^.\n"
msgstr ""

#: core.py:617
msgid ""
"Python could not understand the code the file\n"
"'{filename}'.\n"
"It reached the end of the file and expected more content.\n"
msgstr ""

#: core.py:623
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
"for an unspecified reason.\n"
msgstr ""

#: core.py:655
msgid "More lines not shown."
msgstr ""

#: core.py:756
msgid ""
"Problem: source of `{filename}` is not available\n"
msgstr ""

#: core.py:770
msgid ""
"        To see the lines of code that cause the problem, \n"
"        you must use the Friendly Console and not a \n"
"        regular Python console.\n"
msgstr ""

#: core.py:803
msgid ""
"Unfortunately, no additional information is available:\n"
"the content of file '<stdin>' is not accessible.\n"
"Are you using a regular Python console instead of a Friendly-console?\n"
msgstr ""

#: formatters.py:204
msgid "I do not know."
msgstr ""

#: formatters.py:207 formatters.py:360
msgid "I have no suggestion to offer; try `why()`."
msgstr ""

#: formatters.py:209 formatters.py:357 formatters.py:362
msgid "I have no suggestion to offer."
msgstr ""

#: info_generic.py:38
msgid ""
"`ArithmeticError` is the base class for those built-in exceptions\n"
"that are raised for various arithmetic errors.\n"
"It is unusual that you are seeing this exception;\n"
"normally, a more specific exception should have been raised.\n"
msgstr ""

#: info_generic.py:49
msgid ""
"An `AttributeError` occurs when the code contains something like\n"
"    `object.x`\n"
"and `x` is not a method or attribute (variable) belonging to `object`.\n"
msgstr ""

#: info_generic.py:59
msgid ""
"A `FileNotFoundError` exception indicates that you\n"
"are trying to open a file that cannot be found by Python.\n"
"This could be because you misspelled the name of the file.\n"
msgstr ""

#: info_generic.py:69
msgid ""
"An `ImportError` exception indicates that a certain object could not\n"
"be imported from a module or package. Most often, this is\n"
"because the name of the object is not spelled correctly.\n"
msgstr ""

#: info_generic.py:79
msgid ""
"An `IndentationError` occurs when a given line of code is\n"
"not indented (aligned vertically with other lines) as expected.\n"
msgstr ""

#: info_generic.py:88
msgid ""
"An `IndexError` occurs when you are try to get an item from a list,\n"
"a tuple, or a similar object (sequence), by using an index which\n"
"does not exists; typically, this is because the index you give\n"
"is greater than the length of the sequence.\n"
msgstr ""

#: info_generic.py:99
msgid ""
"A `KeyError` is raised when a value is not found as a\n"
"key in a Python dict.\n"
msgstr ""

#: info_generic.py:108
msgid ""
"`LookupError` is the base class for the exceptions that are raised\n"
"when a key or index used on a mapping or sequence is invalid.\n"
"It can also be raised directly by codecs.lookup().\n"
msgstr ""

#: info_generic.py:118
msgid ""
"A `ModuleNotFoundError` exception indicates that you\n"
"are trying to import a module that cannot be found by Python.\n"
"This could be because you misspelled the name of the module\n"
"or because it is not installed on your computer.\n"
msgstr ""

#: info_generic.py:129
msgid ""
"A `NameError` exception indicates that a variable or\n"
"function name is not known to Python.\n"
"Most often, this is because there is a spelling mistake.\n"
"However, sometimes it is because the name is used\n"
"before being defined or given a value.\n"
msgstr ""

#: info_generic.py:141
msgid ""
"An `OverflowError` is raised when the result of an arithmetic operation\n"
"is too large to be handled by the computer's processor.\n"
msgstr ""

#: info_generic.py:150
msgid ""
"A `RecursionError` is raised when a function calls itself,\n"
"directly or indirectly, too many times.\n"
"It almost always indicates that you made an error in your code\n"
"and that your program would never stop.\n"
msgstr ""

#: info_generic.py:161
msgid ""
"A `SyntaxError` occurs when Python cannot understand your code.\n"
msgstr ""

#: info_generic.py:167
msgid ""
"A `TabError` indicates that you have used both spaces\n"
"and tab characters to indent your code.\n"
"This is not allowed in Python.\n"
"Indenting your code means to have block of codes aligned vertically\n"
"by inserting either spaces or tab characters at the beginning of lines.\n"
"Python's recommendation is to always use spaces to indent your code.\n"
msgstr ""

#: info_generic.py:180
msgid ""
"A `TypeError` is usually caused by trying\n"
"to combine two incompatible types of objects,\n"
"by calling a function with the wrong type of object,\n"
"or by trying to do an operation not allowed on a given type of object.\n"
msgstr ""

#: info_generic.py:191
msgid ""
"A `ValueError` indicates that a function or an operation\n"
"received an argument of the right type, but an inappropriate value.\n"
msgstr ""

#: info_generic.py:200
msgid ""
"In Python, variables that are used inside a function are known as \n"
"local variables. Before they are used, they must be assigned a value.\n"
"A variable that is used before it is assigned a value is assumed to\n"
"be defined outside that function; it is known as a `global`\n"
"(or sometimes `nonlocal`) variable. You cannot assign a value to such\n"
"a global variable inside a function without first indicating to\n"
"Python that this is a global variable, otherwise you will see\n"
"an `UnboundLocalError`.\n"
msgstr ""

#: info_generic.py:215
msgid ""
"No information is available about this exception.\n"
msgstr ""

#: info_generic.py:221
msgid ""
"No information is available about this warning.\n"
msgstr ""

#: info_generic.py:227
msgid ""
"A `ZeroDivisionError` occurs when you are attempting to divide\n"
"a value by zero:\n"
"    `result = my_variable / 0.`\n"
"It can also happen if you calculate the remainder of a division\n"
"using the modulo operator `%`:\n"
"    `result = my_variable % 0`\n"
"or if you try to raise 0 to a negative power.\n"
msgstr ""

#: info_specific.py:26 syntax_errors\analyze_syntax.py:35
msgid ""
"Exception raised by Friendly-traceback itself.\n"
"Please report this example to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
msgstr ""

#: info_specific.py:65
msgid ""
"In your program, the name of the\n"
"file that cannot be found is `{filename}`.\n"
msgstr ""

#: info_specific.py:95
msgid ""
"In your program, the key that cannot be found is `{key_name!r}`.\n"
msgstr ""

#: info_variables.py:32
msgid "a complex number"
msgstr ""

#: info_variables.py:34
msgid "a dictionary (`dict`)"
msgstr ""

#: info_variables.py:36
msgid "a number (`float`)"
msgstr ""

#: info_variables.py:38
msgid "an integer (`int`)"
msgstr ""

#: info_variables.py:40
msgid "a `list`"
msgstr ""

#: info_variables.py:42
msgid "a variable equal to `None` (`NoneType`)"
msgstr ""

#: info_variables.py:44
msgid "a `set`"
msgstr ""

#: info_variables.py:46
msgid "a string (`str`)"
msgstr ""

#: info_variables.py:48
msgid "a `tuple`"
msgstr ""

#: info_variables.py:50
msgid "a `frozenset`"
msgstr ""

#: info_variables.py:455
msgid ""
"A type hint found for `{name}` in the {scope} scope.\n"
"Perhaps you had used a colon instead of an equal sign and wrote\n"
"\n"
"    {name} : {hint}\n"
"\n"
"instead of\n"
"\n"
"    {name} = {hint}\n"
msgstr ""

#: runtime_errors\attribute_error.py:45
msgid ""
"You are attempting to access the attribute `{attr}`\n"
"for a variable whose value is `None`."
msgstr ""

#: runtime_errors\attribute_error.py:66
msgid ""
"This should not happen:\n"
"Python tells us that module `{module}` does not have an attribute named `{attribute}`.\n"
"However, it does not appear that module `{module}` was imported.\n"
msgstr ""

#: runtime_errors\attribute_error.py:77 runtime_errors\attribute_error.py:118
#: runtime_errors\attribute_error.py:224 runtime_errors\import_error.py:108
#: runtime_errors\module_not_found_error.py:55 runtime_errors\name_error.py:82
#: runtime_errors\unbound_local_error.py:44
#: syntax_errors\message_analyzer.py:322 syntax_errors\message_analyzer.py:941
msgid ""
"Did you mean `{name}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:78
msgid ""
"Perhaps you meant to write `{module}.{correct}` instead of `{module}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:85 runtime_errors\attribute_error.py:231
#: runtime_errors\import_error.py:115
msgid ""
"Did you mean one of the following: `{names}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:88
msgid ""
"Instead of writing `{module}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of module `{module}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:98
msgid ""
"Did you give your program the same name as a Python module?\n"
msgstr ""

#: runtime_errors\attribute_error.py:99
msgid ""
"You imported a module named `{module}` from `{mod_path}`.\n"
"There is also a module named `{module}` in Python's standard library.\n"
"Perhaps you need to rename your module.\n"
msgstr ""

#: runtime_errors\attribute_error.py:119
msgid ""
"Perhaps you meant to use the attribute `{attribute}` of \n"
"module `{mod_name}` instead of module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:125
msgid ""
"Python tells us that no object with name `{attribute}` is\n"
"found in module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:144
msgid ""
"`{obj_name}` is a function. Perhaps you meant to write\n"
"`{obj_name}({attribute})`\n"
msgstr ""

#: runtime_errors\attribute_error.py:148
msgid ""
"Did you mean `{obj_name}({attribute})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:153
msgid ""
"`{obj_name}` is a Python built-in function or method\n"
"which does not have an attribute named `{attribute}.`\n"
msgstr ""

#: runtime_errors\attribute_error.py:199
msgid ""
"The object `{obj}` has no attribute named `{attr}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:203
msgid ""
"Note that object `{obj}` uses `__slots__` which prevents\n"
"the creation of new attributes.\n"
msgstr ""

#: runtime_errors\attribute_error.py:211
msgid ""
"The following are some of its known attributes:\n"
"`{names}`."
msgstr ""

#: runtime_errors\attribute_error.py:225
msgid ""
"Perhaps you meant to write `{obj}.{correct}` instead of `{obj}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:232
msgid ""
"Instead of writing `{obj}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of object `{obj}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:249
msgid ""
"Did you mean `'...'.join({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:250
msgid ""
"The object `{obj_name}` has no attribute named `join`.\n"
"Perhaps you wanted something like `'...'.join({obj_name})`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:259
msgid ""
"Did you mean `{known_builtin}({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:262
msgid ""
"The object `{obj_name}` has no attribute named `{attribute}`.\n"
"Perhaps you can use the Python builtin function `{known_builtin}` instead:\n"
"`{known_builtin}({obj_name})`."
msgstr ""

#: runtime_errors\attribute_error.py:295
msgid ""
"Did you mean `{attr}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:297
msgid ""
"The object `{name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:302
msgid ""
"However, `{attr}` is an attribute of `{name}` with a similar meaning.\n"
msgstr ""

#: runtime_errors\attribute_error.py:306
msgid ""
"However, `{name}` has the following attributes with similar meanings:\n"
"`{attributes}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:317
msgid ""
"Did you mean to separate object names by a comma?\n"
msgstr ""

#: runtime_errors\attribute_error.py:319
msgid ""
"`{second}` is not an attribute of `{first}`.\n"
"However, both `{first}` and `{second}` are known objects.\n"
"Perhaps you wrote a period to separate these two objects, \n"
"instead of using a comma.\n"
msgstr ""

#: runtime_errors\import_error.py:24 runtime_errors\index_error.py:26
#: runtime_errors\module_not_found_error.py:24 runtime_errors\name_error.py:20
#: runtime_errors\unbound_local_error.py:21
msgid ""
"No information is known about this exception.\n"
"Please report this example to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
msgstr ""

#: runtime_errors\import_error.py:72
msgid ""
"You have a circular import.\n"
msgstr ""

#: runtime_errors\import_error.py:75
msgid ""
"The object that could not be imported is `{name}`.\n"
"The module or package where it was \n"
"expected to be found is `{module}`.\n"
msgstr ""

#: runtime_errors\import_error.py:88
msgid ""
"Python indicated that you have a circular import.\n"
"This can occur if executing the code in module 'A'\n"
"results in executing the code in module 'B' where\n"
"an attempt to import a name from module 'A' is made\n"
"before the execution of the code in module 'A' had been completed.\n"
msgstr ""

#: runtime_errors\import_error.py:109
msgid ""
"Perhaps you meant to import `{correct}` (from `{module}`) instead of `{typo}`\n"
msgstr ""

#: runtime_errors\import_error.py:118
msgid ""
"Instead of trying to import `{typo}` from `{module}`, \n"
"perhaps you meant to import one of \n"
"the following names which are found in module `{module}`:\n"
"`{candidates}`\n"
msgstr ""

#: runtime_errors\import_error.py:137
msgid ""
"The object that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\import_error.py:179
msgid ""
"The problem was likely caused by what is known as a 'circular import'.\n"
"First, Python imported and started executing the code in file\n"
"   '{file}'.\n"
"which imports module `{last_module}`.\n"
"During this process, the code in another file,\n"
"   '{last_file}'\n"
"was executed. However in this last file, an attempt was made\n"
"to import the original module `{last_module}`\n"
"a second time, before Python had completed the first import.\n"
msgstr ""

#: runtime_errors\index_error.py:71
msgid ""
"You have tried to get the item with index `{index}` of `{name}`,\n"
"{obj_type} of length `{length}`.\n"
msgstr ""

#: runtime_errors\index_error.py:82
msgid ""
"The largest valid index of `{name}` is `{index}`.\n"
msgstr ""

#: runtime_errors\index_error.py:85
msgid ""
"Remember: the first item of {obj_type} is at index 0.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:49
msgid ""
"The name of the module that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:58
msgid ""
"The following existing modules have names that are similar \n"
"to the module you tried to import: `{names}`\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:63
msgid ""
"`{name}` is an existing module that has a similar name.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:81
msgid ""
"No additional information available since `{name}` cannot be imported.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:92
msgid ""
"Did you mean `from {name} import {rest}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:95
msgid ""
"`{rest}` is not a separate module but an object that is part of `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:105
msgid ""
"Did you mean `import {name}.{attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:108
msgid ""
"Perhaps you meant `import {name}.{attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is a module that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:116
msgid ""
"Did you mean `from {name} import {attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:119
msgid ""
"Perhaps you meant `from {name} import {attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is an object that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:126
msgid ""
"Other objects with similar names that are part of\n"
" `{name}` include `{others}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:131
msgid ""
"`{rest}` cannot be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\name_error.py:57
msgid ""
"In your program, `{var_name}` is an unknown name\n"
"that had been declared as belonging in a nonlocal scope;\n"
"however, no such name could not be found.\n"
msgstr ""

#: runtime_errors\name_error.py:68
msgid ""
"In your program, `{var_name}` is an unknown name.\n"
msgstr ""

#: runtime_errors\name_error.py:72
msgid ""
"Did you mean `1j`?\n"
msgstr ""

#: runtime_errors\name_error.py:73
msgid ""
"However, sometimes `{name}` is intended to represent\n"
"the square root of `-1` which is written as `1j` in Python.\n"
msgstr ""

#: runtime_errors\name_error.py:84 runtime_errors\unbound_local_error.py:51
msgid ""
"Did you use a colon instead of an equal sign?\n"
msgstr ""

#: runtime_errors\name_error.py:93
msgid "I have no additional information for you."
msgstr ""

#: runtime_errors\name_error.py:107
msgid ""
"The similar name `{name}` was found in the local scope.\n"
msgstr ""

#: runtime_errors\name_error.py:108
msgid ""
"The similar name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:109
msgid ""
"The name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:110
msgid ""
"The Python builtin `{name}` has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:126 runtime_errors\unbound_local_error.py:104
msgid ""
"Instead of writing `{name}`, perhaps you meant one of the following:\n"
msgstr ""

#: runtime_errors\name_error.py:131 runtime_errors\unbound_local_error.py:108
msgid "*   Local scope: "
msgstr ""

#: runtime_errors\name_error.py:132
msgid "*   Global scope: "
msgstr ""

#: runtime_errors\name_error.py:133
msgid "*   Python builtins: "
msgstr ""

#: runtime_errors\name_error.py:173
msgid "Did you forget to add `self`?"
msgstr ""

#: runtime_errors\name_error.py:178
msgid ""
"The {scope} object `{obj}` has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}` instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:39 runtime_errors\value_error.py:38
msgid ""
"I do not recognize this case. Please report it to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
msgstr ""

#: runtime_errors\type_error.py:62 runtime_errors\type_error.py:84
msgid ""
"You tried to concatenate (add) two different types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:129
msgid ""
"Did you forget to convert the string `{name}` into {number_type}?\n"
msgstr ""

#: runtime_errors\type_error.py:132
msgid ""
"Perhaps you forgot to convert the string `{name}` into {number_type}.\n"
msgstr ""

#: runtime_errors\type_error.py:158
msgid ""
"You tried to add two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:166
msgid ""
"You tried to subtract two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:174
msgid ""
"You tried to multiply two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:182
msgid ""
"You tried to divide two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:190
msgid ""
"You tried to perform the bitwise operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:207 runtime_errors\type_error.py:645
#: runtime_errors\type_error.py:740 syntax_errors\statement_analyzer.py:1033
#: syntax_errors\statement_analyzer.py:1093
#: syntax_errors\statement_analyzer.py:1130
#: syntax_errors\statement_analyzer.py:1138
msgid ""
"Did you mean `{line}`?\n"
msgstr ""

#: runtime_errors\type_error.py:208
msgid ""
"Outside of Python, `^` is often used to indicate exponentiation.\n"
msgstr ""

#: runtime_errors\type_error.py:211 runtime_errors\type_error.py:648
msgid ""
"Perhaps you meant `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:214
msgid ""
"You tried to perform the bit shifting operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:224
msgid ""
"You tried to exponentiate (raise to a power)\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:233
msgid ""
"You tried to use the operator {operator}\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
"This operator is normally used only\n"
"for multiplication of matrices.\n"
msgstr ""

#: runtime_errors\type_error.py:262
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:294
msgid "Perhaps you meant to write `{operator}=` instead of `={operator}`"
msgstr ""

#: runtime_errors\type_error.py:298
msgid ""
"You tried to use the unary operator '{operator}'\n"
"with the following type of object: {obj}.\n"
"This operation is not defined for this type of object.\n"
msgstr ""

#: runtime_errors\type_error.py:317
msgid ""
"In Python, some objects are known as immutable:\n"
"once defined, their value cannot be changed.\n"
"You tried change part of such an immutable object: {obj},\n"
"most likely by using an indexing operation.\n"
msgstr ""

#: runtime_errors\type_error.py:324
msgid ""
"Did you mean to use a list?\n"
msgstr ""

#: runtime_errors\type_error.py:325
msgid ""
"Perhaps you meant to use a list instead.\n"
msgstr ""

#: runtime_errors\type_error.py:335
msgid ""
"In Python 3, exceptions must be derived from BaseException.\n"
msgstr ""

#: runtime_errors\type_error.py:367
msgid ""
"You apparently have called the function `{fn_name}` with\n"
"{nb_given} positional argument(s) while it requires {nb_required}\n"
"such positional argument(s).\n"
msgstr ""

#: runtime_errors\type_error.py:373
msgid ""
"Perhaps you forgot `self` when defining `{fn_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:389
msgid ""
"You apparently have called the function '{fn_name}' with\n"
"fewer positional arguments than it requires ({nb_required} missing).\n"
msgstr ""

#: runtime_errors\type_error.py:408
msgid ""
"Python indicates that you have an object of type `{obj_type}`,\n"
"followed by something surrounded by parentheses, `(...)`,\n"
"which Python took as an indication of a function call.\n"
"Either the object of type {obj_type} was meant to be a function,\n"
"or you forgot a comma before `(...)`.\n"
msgstr ""

#: runtime_errors\type_error.py:429
msgid ""
"Because of the surrounding parenthesis, `{fn_call}` \n"
"is interpreted by Python as indicating a function call for \n"
"`{obj_name}`, which is an object of type `{obj_type}`\n"
"which cannot be called.\n"
"\n"
msgstr ""

#: runtime_errors\type_error.py:442
msgid ""
"However, `{fn_call}` is a `tuple`.\n"
"Either the object `{obj_name}` was meant to be a function\n"
"or you have a missing comma between the object `{obj_name}`\n"
"and the tuple `{fn_call}` and meant to write\n"
"`{obj_name}, {fn_call}`.\n"
msgstr ""

#: runtime_errors\type_error.py:449
msgid ""
"Did you forget a comma between `{obj_name}` and `{fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:455
msgid ""
"However, `{obj_name}` is a sequence.\n"
"Perhaps you meant to use `[]` instead of `()` and write\n"
"`{obj_name}[{slice}]`\n"
msgstr ""

#: runtime_errors\type_error.py:460
msgid ""
"Did you mean `{obj_name}[{slice}]`?\n"
msgstr ""

#: runtime_errors\type_error.py:471
msgid ""
"However, both `{obj_name}` and `{fn_call}` are numbers.\n"
"Perhaps you forgot a multiplication operator, `*`,\n"
"and meant to write `{obj_name} * {fn_call}`\n"
"."
msgstr ""

#: runtime_errors\type_error.py:476
msgid ""
"Did you mean `{obj_name} * {fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:489
msgid ""
"Did you forget to convert `{name}` into an integer?\n"
msgstr ""

#: runtime_errors\type_error.py:490
msgid ""
"Perhaps you forgot to convert `{name}` into an integer.\n"
msgstr ""

#: runtime_errors\type_error.py:501
msgid ""
"You can only multiply sequences, such as list, tuples,\n"
" strings, etc., by integers.\n"
msgstr ""

#: runtime_errors\type_error.py:522
msgid ""
"Did you forget to convert `{name1}` and `{name2}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:525
msgid ""
"Perhaps you forgot to convert `{name1}` and `{name2}` into integers.\n"
msgstr ""

#: runtime_errors\type_error.py:561
msgid ""
"You wrote an object of type `{obj}` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:572
msgid ""
"Did you forget to convert `{names}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:575
msgid "Perhaps you forgot to convert `{names}` into integers."
msgstr ""

#: runtime_errors\type_error.py:593
msgid ""
"In the expression `{line}`\n"
"what is included between the square brackets, `[...]`,\n"
"must be either an integer or a slice\n"
"(`start:stop` or `start:stop:step`) \n"
"and you have used {obj_type} instead.\n"
msgstr ""

#: runtime_errors\type_error.py:670
msgid ""
"When using a slice to extract a range of elements\n"
"from a sequence, that is something like\n"
"`[start:stop]` or `[start:stop:step]`\n"
"each of `start`, `stop`, `step` must be either an integer, `None`,\n"
"or possibly some other object having an `__index__` method.\n"
msgstr ""

#: runtime_errors\type_error.py:689
msgid ""
"Only hashable objects can be used\n"
"as elements of `set` or keys of `dict`.\n"
"Hashable objects are objects that do not change value\n"
"once they have been created."
msgstr ""

#: runtime_errors\type_error.py:699
msgid ""
"Instead of using {original}, consider using {replacement}.\n"
msgstr ""

#: runtime_errors\type_error.py:720
msgid ""
"Subscriptable objects are typically containers from which\n"
"you can retrieve item using the notation `[...]`.\n"
msgstr ""

#: runtime_errors\type_error.py:732
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from an object of type `{obj_type}` which is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:741
msgid ""
"Perhaps you meant to write `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:744
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from `{name}`, an object of type `{obj_type}`. This is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:761
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables.\n"
"An iterable is required here.\n"
msgstr ""

#: runtime_errors\type_error.py:778 runtime_errors\value_error.py:52
msgid ""
"Unpacking is a convenient way to assign a name,\n"
"to each item of an iterable.\n"
msgstr ""

#: runtime_errors\type_error.py:782
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables,\n"
"but not objects of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\type_error.py:797
msgid ""
"{function} does not accept a sequence as an argument.\n"
"Instead of writing `{line}`\n"
"perhaps you should use the `dict.fromkeys()` method: `{new_line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:802
msgid ""
"Perhaps you need to use the `dict.fromkeys()` method.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:55
msgid ""
"The name `{var_name}` exists in both the global and nonlocal scope.\n"
"This can be rather confusing and is not recommended.\n"
"Depending on which variable you wanted to refer to, you needed to add either\n"
"\n"
"    global {var_name}\n"
"\n"
"or\n"
"\n"
"    nonlocal {var_name}\n"
"\n"
"as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:64
msgid ""
"Did you forget to add either `global {var_name}` or \n"
"`nonlocal {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:77
msgid ""
"The name `{var_name}` exists in the {scope} scope.\n"
"Perhaps the statement\n"
"\n"
"    {scope} {var_name}\n"
"\n"
"should have been included as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:84
msgid ""
"Did you forget to add `{scope} {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:98
msgid "The similar name `{name}` was found in the local scope. "
msgstr ""

#: runtime_errors\value_error.py:99 runtime_errors\value_error.py:108
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than {length}, the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:114
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:133 runtime_errors\value_error.py:143
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:149
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:64
msgid ""
"Python gave us the following informative message\n"
"about the possible cause of the error:\n"
"\n"
"    {message}\n"
"\n"
"However, I do not recognize this information and I have\n"
"to guess what caused the problem, but I might be wrong.\n"
"\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:79
msgid ""
"Currently, I cannot guess the likely cause of this error.\n"
"Try to examine closely the line indicated as well as the line\n"
"immediately above to see if you can identify some misspelled\n"
"word, or missing symbols, like (, ), [, ], :, etc.\n"
"\n"
"Unless your code uses type annotations, which are beyond our scope,\n"
"you might want to report this case to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
"\n"
msgstr ""

#: syntax_errors\indentation_error.py:10
msgid ""
"The line identified above is more indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:12
msgid ""
"The line identified above\n"
"was expected to begin a new indented block.\n"
msgstr ""

#: syntax_errors\indentation_error.py:17
msgid ""
"The line identified above is less indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:27
msgid ""
"However, line {number}, which is identified as having a problem,\n"
"consists of a single string which is also the case\n"
"for the preceding line.\n"
"Perhaps you meant to include a continuation character, `\\`,\n"
"at the end of line {preceding}.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:92
msgid "You cannot assign a value to `{keyword}`."
msgstr ""

#: syntax_errors\message_analyzer.py:94
msgid ""
"`{keyword}` is a constant in Python; you cannot assign it a value.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:98
#: syntax_errors\statement_analyzer.py:861
msgid ""
"You were trying to assign a value to the Python keyword `{keyword}`.\n"
"This is not allowed.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:114
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"conditional expression instead of the name of a variable.\n"
"A conditional expression has the following form:\n"
"\n"
"    variable = object if condition else other_object"
msgstr ""

#: syntax_errors\message_analyzer.py:140
msgid "some value"
msgstr ""

#: syntax_errors\message_analyzer.py:141
msgid ""
"You wrote an expression like\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, is\n"
"a function call and not the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:153
msgid ""
"You wrote the expression\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, either is\n"
"or includes a function call and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:170
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"generator expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:183
msgid ""
"You wrote an expression that has the f-string `{fstring}`\n"
"on the left-hand side of the equal sign.\n"
"An f-string should only appear on the right-hand side of an equal sign.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:201
msgid "of type `int`"
msgstr ""

#: syntax_errors\message_analyzer.py:203
msgid "of type `str`"
msgstr ""

#: syntax_errors\message_analyzer.py:205
msgid "of type `float`"
msgstr ""

#: syntax_errors\message_analyzer.py:207
msgid "of type `complex`"
msgstr ""

#: syntax_errors\message_analyzer.py:209
msgid "of type `dict`"
msgstr ""

#: syntax_errors\message_analyzer.py:211
msgid "of type `tuple`"
msgstr ""

#: syntax_errors\message_analyzer.py:213
msgid "of type `list`"
msgstr ""

#: syntax_errors\message_analyzer.py:215
msgid "of type `set`"
msgstr ""

#: syntax_errors\message_analyzer.py:229
msgid ""
"The object named `{name}` is defined with type annotation\n"
"as a local variable. It cannot be declared to be a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:255
msgid ""
"You wrote an expression that has the f-string `{fstring}`\n"
"on the left-hand side of the equal sign.\n"
"An f-string should only appear on the right-hand side of the equal sign.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:264
msgid "variable_name"
msgstr ""

#: syntax_errors\message_analyzer.py:268
msgid ""
"Perhaps you meant to write:\n"
"\n"
"    {name} = {literal}\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:273
msgid "Perhaps you meant to write `{name} = {literal}`"
msgstr ""

#: syntax_errors\message_analyzer.py:294
msgid ""
"You wrote an expression like\n"
"\n"
"    {literal} = {name}\n"
"where `{literal}`, on the left-hand side of the equal sign,\n"
"is or includes an actual object {of_type}\n"
"and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:315
msgid ""
"You wrote an expression that includes some mathematical operations\n"
"on the left-hand side of the equal sign which should be\n"
"only used to assign a value to a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:323
msgid ""
"Perhaps you meant to write `{name}` instead of `{original}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:349
msgid ""
"You declared `{name}` as being both a global and nonlocal variable.\n"
"A variable can be global, or nonlocal, but not both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:362
msgid ""
"The Python keyword `break` can only be used inside a for loop or inside a while loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:374
msgid ""
"The Python keyword `continue` can only be used inside a for loop or inside a while loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:391
msgid ""
"You attempted to delete a function call\n"
"\n"
"    {line}\n"
"instead of deleting the function's name\n"
"\n"
"    {correct}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:415
msgid ""
"You cannot delete the constant `{constant}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:419
msgid ""
"You cannot delete the literal `{literal}`.\n"
"You can only delete the names of objects, or\n"
"individual items in a container.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:433
msgid ""
"You have defined a function repeating the keyword argument\n"
"\n"
"    {name}\n"
"twice; each keyword argument should appear only once in a function definition.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:447
msgid ""
"Did you forget a closing quote?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:448
msgid ""
"You starting writing a string with a single or double quote\n"
"but never ended the string with another quote on that line.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:460
msgid ""
"One of the following two possibilities could be the cause:\n"
"1. You meant to do a comparison with == and wrote = instead.\n"
"2. You called a function with a named argument:\n"
"\n"
"       a_function(invalid=something)\n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:478
msgid ""
"You are using a generator expression, something of the form\n"
"    `x for x in thing`\n"
"You must add parentheses enclosing that expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:491
msgid ""
"You have called a function repeating the same keyword argument (`{arg}`).\n"
"Each keyword argument should appear only once in a function call.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:503
msgid ""
"You likely called a function with a named argument:\n"
"\n"
"   `a_function(invalid=something)`\n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:518
#: syntax_errors\statement_analyzer.py:127
msgid ""
"Did you use copy-paste?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:521
msgid ""
"Python indicates that you used the unicode character `{bad_character}`\n"
"which is not allowed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:527
msgid ""
"Did you mean to use a normal quote character, `'` or `\"`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:531
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"instead of a normal single or double quote for a string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:568
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}` on line {lineno}.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:573
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}`.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:582 syntax_errors\message_analyzer.py:755
msgid ""
"I will attempt to be give a bit more information.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:594
msgid ""
"Perhaps you forgot a closing quote.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:595
msgid ""
"Inside the f-string `{fstring}`, \n"
"you have another string, which starts with either a\n"
"single quote (') or double quote (\"), without a matching closing one.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:615
msgid ""
"You are including the statement\n"
"\n"
"    {newline}\n"
"\n"
"indicating that `{name}` is a variable defined outside a function.\n"
"You are also using the same `{name}` as an argument for that\n"
"function, thus indicating that it should be variable known only\n"
"inside that function, which is the contrary of what `global` implied.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:633
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:647
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:661
msgid ""
"Did you forget to add `nonlocal`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:662
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:675
msgid ""
"You used `{name}` as a parameter for a function\n"
"before declaring it also as a nonlocal variable:\n"
"`{name}` cannot be both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:689
msgid ""
"Did you forget to write `nonlocal` first?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:691
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:703
msgid ""
"You used the nonlocal keyword at a module level.\n"
"The nonlocal keyword refers to a variable inside a function\n"
"given a value outside that function."
msgstr ""

#: syntax_errors\message_analyzer.py:717
msgid ""
"You declared the variable `{name}` as being a\n"
"nonlocal variable but it cannot be found.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:729
msgid ""
"You are using the continuation character `\\` outside of a string,\n"
"and it is followed by some other character(s).\n"
"I am guessing that you forgot to enclose some content in a string.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:746
msgid ""
"Python tells us that it reached the end of the file\n"
"and expected more content.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:775
#: syntax_errors\statement_analyzer.py:69
msgid ""
"The closing {bracket} on line {linenumber} does not match anything.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:787
msgid ""
"In Python, you can call functions with only positional arguments\n"
"\n"
"    test(1, 2, 3)\n"
"\n"
"or only keyword arguments\n"
"\n"
"    test(a=1, b=2, c=3)\n"
"\n"
"or a combination of the two\n"
"\n"
"    test(1, 2, c=3)\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:806
msgid ""
"In Python, you can define functions with only positional arguments\n"
"\n"
"    def test(a, b, c): ...\n"
"\n"
"or only keyword arguments\n"
"\n"
"    def test(a=1, b=2, c=3): ...\n"
"\n"
"or a combination of the two\n"
"\n"
"    def test(a, b, c=3): ...\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:828
msgid ""
"Perhaps you need to type\n"
"\n"
"     print({message})\n"
"\n"
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:844
msgid ""
"The star operator `*` is interpreted to mean that\n"
"iterable unpacking is to be used to assign a name\n"
"to each item of an iterable, which does not make sense here.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:860
msgid ""
"You can only use a `return` statement inside a function or method.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:872
msgid ""
"Seriously?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:874
msgid ""
"You cannot be serious!\n"
"\n"
"In case this is a mistake in a real program, please\n"
"consider reducing the number of nested code blocks.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:890
msgid ""
"Did you forget something after `*`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:892
msgid ""
"Assuming you were defining a function, you need\n"
"to replace `*` by either `*arguments` or\n"
"by `*, named_argument=value`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:908
msgid ""
"This is a message that was added in Python 3.9\n"
"to prevent redefining `__peg_parser__`.\n"
"It should not be present in other versions.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:926
msgid ""
"The available features are `{names}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:931
msgid ""
"When using a `from __future__ import` statement,\n"
"you must import specific named features.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:942
msgid ""
"Instead of `{feature}`, perhaps you meant to import `{name}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:946
msgid ""
"`{feature}` is not a valid feature of module `__future__`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:961
msgid ""
"A `from __future__ import` statement changes the way Python\n"
"interprets the code in a file.\n"
"It must appear at the beginning of the file."
msgstr ""

#: syntax_errors\message_analyzer.py:977
msgid ""
"I suspect you wrote `from __future__ import braces` following\n"
"someone else's suggestion. This will never work.\n"
"\n"
"Unlike other programming languages, Python's code block are defined by\n"
"their indentation level, and not by using some curly braces, like `{...}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:99
msgid ""
"The closing {bracket} on line {close_lineno} does not match the opening {open_bracket} on line {open_lineno}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:123
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `>>>`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:153
#: syntax_errors\statement_analyzer.py:650
msgid ""
"Your Python version does not support this f-string feature.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:154
msgid ""
"You appear to be using the operator `:=`, sometimes called\n"
"the walrus operator. This operator requires the use of\n"
"Python 3.8 or newer. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:171
msgid ""
"You should not use the backquote character.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:172
msgid ""
"You are using the backquote character.\n"
"Either you meant to write a single quote, ', or copied Python 2 code;\n"
"in this latter case, use the function `repr(x)`."
msgstr ""

#: syntax_errors\statement_analyzer.py:191
msgid ""
"You cannot use the Python keyword `{word}` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:195
msgid ""
"You cannot use the constant `__debug__` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:198
msgid ""
"`{word}` cannot be used as an attribute.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:213
msgid ""
"Perhaps you meant to write `elif`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:214
msgid ""
"You likely meant to use Python's `elif` keyword\n"
"but wrote `{name}` instead\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:232
msgid ""
"Did you mean `from {module} import {function}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:235
msgid ""
"You wrote something like\n"
"\n"
"    import {function} from {module}\n"
"instead of\n"
"\n"
"    from {module} import {function}\n"
"\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:269
msgid ""
"Perhaps you misplaced a quote.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:270
msgid ""
"There appears to be a Python identifier (variable name)\n"
"immediately following a string.\n"
"I suspect that you were trying to use a quote inside a string\n"
"that was enclosed in quotes of the same kind.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:295
msgid ""
"Did you leave some spaces between operators?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:296
msgid ""
"It looks like you wrote two operators, `{first}` and `{second}`,\n"
"separated by spaces instead of writing them as a single operator:\n"
"`{correct}`"
msgstr ""

#: syntax_errors\statement_analyzer.py:332
msgid ""
"Did you write operators in an incorrect order?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:333
msgid ""
"It looks like you wrote two operators (`{first}` and `{second}`)\n"
"in the wrong order: `{wrong}` instead of `{correct}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:378
msgid ""
"However, there might be some other errors in this statement.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:384
msgid ""
"Perhaps you needed `==` instead of `=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:385
msgid ""
"Perhaps you needed `==` or `:=` instead of `=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:386
msgid ""
"Perhaps you needed `:=` instead of `=:`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:389
msgid ""
"You used an assignment operator `=` instead of an equality operator `==`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:396
msgid ""
"You used an assignment operator `=` followed by `:`; perhaps you meant to use \n"
"the walrus operator `:=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:401
msgid ""
"You used an assignment operator `=`; perhaps you meant to use \n"
"an equality operator, `==`, or the walrus operator `:=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:419
msgid ""
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:433
msgid ""
"It looks as if you are attempting to use pip to install a module.\n"
"`pip` is a command that needs to run in a terminal,\n"
"not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:441
msgid ""
"Pip cannot be used in a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:452
msgid ""
"You cannot have a dot `.` followed by `{bracket}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:460
msgid ""
"Perhaps you need to replace the dot by a comma.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:474
msgid ""
"It looks like you are trying to raise an exception using Python 2 syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:486
msgid ""
"The double star operator `**` is likely interpreted to mean that\n"
"dict unpacking is to be used which does not make sense here.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:529
msgid ""
"Did you forget a colon `:`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:532
msgid ""
"You wrote a `{for_while}` loop but\n"
"forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:539
msgid ""
"You wrote a statement beginning with\n"
"`{name}` but forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:560
msgid ""
"Did you made a mistake in writing an hexadecimal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:561
msgid ""
"It looks like you used an invalid character (`{character}`) in an hexadecimal number.\n"
"\n"
"Hexadecimal numbers are base 16 integers that use the symbols `0` to `9`\n"
"to represent values 0 to 9, and the letters `a` to `f` (or `A` to `F`)\n"
"to represent values 10 to 15.\n"
"In Python, hexadecimal numbers start with either `0x` or `0X`,\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:583
msgid ""
"Did you made a mistake in writing an octal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:584
msgid ""
"It looks like you used an invalid character (`{character}`) in an octal number.\n"
"\n"
"Octal numbers are base 8 integers that only use the symbols `0` to `7`\n"
"to represent values.\n"
"In Python, hexadecimal numbers start with either `0o` or `0O`,\n"
"(the digit zero followed by the letter `o`)\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:607
msgid ""
"Valid names cannot begin with a number.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:613
msgid ""
"Did you mean `{number}j`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:614
msgid ""
"Perhaps you thought that `i` could be used to represent\n"
"the square root of `-1`. In Python, the symbol used for this is `j`\n"
"and the complex part is written as `some_number` immediately\n"
"followed by `j`, with no spaces in between.\n"
"Perhaps you meant to write `{number}j`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:624
msgid ""
"[Note: `{first}` is a complex number.]\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:630
msgid ""
"Perhaps you forgot a multiplication operator, `{first} * {second}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:651
msgid ""
"You are likely using a 'debug' syntax of f-strings introduced\n"
"in Python version 3.8. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:656
msgid ""
"You are likely trying to assign a value within an f-string.\n"
"This is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:671
msgid ""
"The content of your f-string is invalid. Please consult the documentation:\n"
"https://docs.python.org/3/reference/lexical_analysis.html#f-strings\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:681
msgid ""
"The correct syntax is:\n"
"\n"
"    def name ( ... ):"
msgstr ""

#: syntax_errors\statement_analyzer.py:709
msgid ""
"Did you forget parentheses?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:710
msgid ""
"Perhaps you forgot to include parentheses.\n"
"You might have meant to write `{line}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:733
msgid ""
"You cannot use a Python keyword as a function name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:734
msgid ""
"You tried to use the Python keyword `{kwd}` as a function name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:740
msgid ""
"There are more syntax errors later in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:757
msgid ""
"You wrote an invalid function name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:758
msgid ""
"The name of a function must be a valid Python identifier,\n"
"that is a name that begins with a letter or an underscore character, `_`,\n"
"and which contains only letters, digits or the underscore character.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:764
msgid ""
"You attempted to use a string as a function name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:785
msgid ""
"You forgot to name your function.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:803
msgid ""
"I am guessing that you tried to use the Python keyword\n"
"`{kwd}` as an argument in the definition of a function\n"
"where an identifier (variable name) was expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:826
msgid ""
"You tried to define a function and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:830
msgid ""
"You tried to define a function or method and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:851
msgid ""
"You tried to define a class and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:895
msgid ""
"I am guessing that you forgot a comma between two strings\n"
"when defining a dict.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:903
#: syntax_errors\statement_analyzer.py:1029
msgid ""
"Did you forget a comma?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:961
msgid ""
"It is possible that you forgot a comma between items in a tuple, \n"
"or between function arguments, \n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:968
msgid ""
"It is possible that you forgot a comma between items in a list\n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:974
msgid ""
"It is possible that you forgot a comma between items in a set or dict\n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1002
msgid ""
"Python indicates that the error is caused by `{second}` written immediately after `{first}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1031
msgid ""
"Perhaps you meant\n"
"\n"
"    {line}\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1038
msgid ""
"Did you forget something between `{first}` and `{second}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1053
msgid ""
"Perhaps you meant to insert an operator like `{operators}`\n"
"between `{first}` and `{second}`.\n"
"The following lines of code would not cause any `SyntaxError`:\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1062
msgid ""
"Note: these are just some of the possible choices and that\n"
"some of them might raise other types of exceptions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1081
msgid ""
"Or perhaps you forgot that you cannot have spaces\n"
"in variable names.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1105
msgid ""
"Perhaps you forgot that you cannot have spaces\n"
"in variable names and wrote `'{first} {second}'`\n"
"instead of `'{first}_{second}'`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1111
#: syntax_errors\statement_analyzer.py:1115
msgid ""
"Did you mean `'{first}_{second}'`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1132
msgid ""
"Perhaps you meant to write `{keyword}` and made a typo.\n"
"The correct line would then be `{line}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1140
msgid ""
"Perhaps you wrote another word instead of a Python keyword.\n"
"If that is the case, perhaps you meant to write one of\n"
"the following lines of code which might not raise a `SyntaxError`:\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1180
msgid ""
"It is possible that you used an equal sign `=` instead of a colon `:`\n"
"to assign values to keys in a dict\n"
"before or at the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1200
msgid ""
"You wrote three equal signs in a row which is allowed in some\n"
"programming languages, but not in Python. To check if two objects\n"
"are equal, use two equal signs, `==`; to see if two names represent\n"
"the exact same object, use the operator `is`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1206
msgid ""
"Did you mean to use `is` instead of `===`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1208
msgid ""
"You cannot have write the same operator, `{op}`, twice in a row.\n"
"Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1214
msgid ""
"You cannot have these two operators, `{first}` and `{second}`,\n"
"following each other. Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1231
msgid ""
"You cannot use dotted names as function arguments.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1247
msgid ""
"`/` indicates that the previous arguments in a function definition\n"
"are positional arguments. However, `*` indicates that the arguments\n"
"that follow must be keyword arguments.\n"
"When they are used together, `/` must appear before `*`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1253
msgid ""
"`*` must appear after `/` in a function definition.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1258
msgid ""
"You can only use `/` once in a function definition.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1277
msgid ""
"You can only use `*` once in a function definition.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1292
msgid ""
"The Python keyword `and` can only be used for boolean expressions.\n"
"Perhaps you meant to write\n"
"\n"
"`{new_statement}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1328
msgid ""
"The opening {bracket} on line {linenumber} is not closed.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:37
msgid "parenthesis `(`"
msgstr ""

#: syntax_errors\syntax_utils.py:39
msgid "parenthesis `)`"
msgstr ""

#: syntax_errors\syntax_utils.py:41
msgid "square bracket `[`"
msgstr ""

#: syntax_errors\syntax_utils.py:43
msgid "square bracket `]`"
msgstr ""

#: syntax_errors\syntax_utils.py:45
msgid "curly bracket `{`"
msgstr ""

#: syntax_errors\syntax_utils.py:47
msgid "curly bracket `}`"
msgstr ""

