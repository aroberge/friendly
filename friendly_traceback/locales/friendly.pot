# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-22 10:52-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=cp1252\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: __init__.py:184
msgid "The file {filename} does not exist."
msgstr ""

#: config.py:80 config.py:205
msgid "Nothing to show: no exception recorded."
msgstr ""

#: console.py:63
msgid ""
"\n"
"    Rich is not installed.\n"
"\n"
msgstr ""

#: console.py:179
msgid "Warning: you added a type hint to the python builtin {name}."
msgstr ""

#: console.py:182
msgid ""
"Warning: you used a type hint for a variable without assigning it a value.\n"
msgstr ""

#: console.py:185
msgid "Instead of {hint}, perhaps you meant {assignment}."
msgstr ""

#: console.py:257
msgid "Warning: you have redefined the python builtin {name}."
msgstr ""

#: core.py:293 core.py:314
msgid "Python exception:"
msgstr ""

#: core.py:359 core.py:400
msgid "Likely cause based on the information given by Python:"
msgstr ""

#: core.py:395
msgid "Python's error message (invalid syntax) cannot be used to identify the problem:"
msgstr ""

#: core.py:473
msgid ""
"Exception raised on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:504
msgid ""
"Execution stopped on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:526
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
"beyond the location indicated by --> and ^.\n"
msgstr ""

#: core.py:532
msgid ""
"Python could not understand the code the file\n"
"'{filename}'.\n"
"It reached the end of the file and expected more content.\n"
msgstr ""

#: core.py:538
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
"for an unspecified reason.\n"
msgstr ""

#: core.py:584
msgid "More lines not shown."
msgstr ""

#: core.py:696
msgid ""
"        To see the lines of code that cause the problem, \n"
"        you must use the Friendly Console and not a \n"
"        regular Python console.\n"
msgstr ""

#: core.py:702
msgid ""
"Problem: source of '{filename}' is not available\n"
msgstr ""

#: core.py:720
msgid ""
"Unfortunately, no additional information is available:\n"
"the content of file '<stdin>' is not accessible.\n"
"Are you using a regular Python console instead of a Friendly-console?\n"
msgstr ""

#: formatters.py:205 formatters.py:360
msgid "I do not know."
msgstr ""

#: formatters.py:208 formatters.py:363
msgid "I have no suggestion to offer; try `why()`."
msgstr ""

#: formatters.py:210 formatters.py:365
msgid "I have no suggestion to offer."
msgstr ""

#: friendly_exception.py:10
msgid ""
"Friendly-traceback: Internal Problem\n"
"Source: {fn_name}\n"
"Please report this case.\n"
msgstr ""

#: info_generic.py:38
msgid ""
"`ArithmeticError` is the base class for those built-in exceptions\n"
"that are raised for various arithmetic errors.\n"
"It is unusual that you are seeing this exception;\n"
"normally, a more specific exception should have been raised.\n"
msgstr ""

#: info_generic.py:49
msgid ""
"An `AttributeError` occurs when the code contains something like\n"
"    `object.x`\n"
"and `x` is not a method or attribute (variable) belonging to `object`.\n"
msgstr ""

#: info_generic.py:59
msgid ""
"A `FileNotFoundError` exception indicates that you\n"
"are trying to open a file that cannot be found by Python.\n"
"This could be because you misspelled the name of the file.\n"
msgstr ""

#: info_generic.py:69
msgid ""
"An `ImportError` exception indicates that a certain object could not\n"
"be imported from a module or package. Most often, this is\n"
"because the name of the object is not spelled correctly.\n"
msgstr ""

#: info_generic.py:79
msgid ""
"An `IndentationError` occurs when a given line of code is\n"
"not indented (aligned vertically with other lines) as expected.\n"
msgstr ""

#: info_generic.py:88
msgid ""
"An `IndexError` occurs when you are try to get an item from a list,\n"
"a tuple, or a similar object (sequence), by using an index which\n"
"does not exists; typically, this is because the index you give\n"
"is greater than the length of the sequence.\n"
"Reminder: the first item of a sequence is at index 0.\n"
msgstr ""

#: info_generic.py:100
msgid ""
"A `KeyError` is raised when a value is not found as a\n"
"key in a Python dict.\n"
msgstr ""

#: info_generic.py:109
msgid ""
"`LookupError` is the base class for the exceptions that are raised\n"
"when a key or index used on a mapping or sequence is invalid.\n"
"It can also be raised directly by codecs.lookup().\n"
msgstr ""

#: info_generic.py:119
msgid ""
"A `ModuleNotFoundError` exception indicates that you\n"
"are trying to import a module that cannot be found by Python.\n"
"This could be because you misspelled the name of the module\n"
"or because it is not installed on your computer.\n"
msgstr ""

#: info_generic.py:130
msgid ""
"A `NameError` exception indicates that a variable or\n"
"function name is not known to Python.\n"
"Most often, this is because there is a spelling mistake.\n"
"However, sometimes it is because the name is used\n"
"before being defined or given a value.\n"
msgstr ""

#: info_generic.py:142
msgid ""
"An `OverflowError` is raised when the result of an arithmetic operation\n"
"is too large to be handled by the computer's processor.\n"
msgstr ""

#: info_generic.py:151
msgid ""
"A `RecursionError` is raised when a function calls itself,\n"
"directly or indirectly, too many times.\n"
"It almost always indicates that you made an error in your code\n"
"and that your program would never stop.\n"
msgstr ""

#: info_generic.py:162
msgid ""
"A `SyntaxError` occurs when Python cannot understand your code.\n"
msgstr ""

#: info_generic.py:168
msgid ""
"A `TabError` indicates that you have used both spaces\n"
"and tab characters to indent your code.\n"
"This is not allowed in Python.\n"
"Indenting your code means to have block of codes aligned vertically\n"
"by inserting either spaces or tab characters at the beginning of lines.\n"
"Python's recommendation is to always use spaces to indent your code.\n"
msgstr ""

#: info_generic.py:181
msgid ""
"A `TypeError` is usually caused by trying\n"
"to combine two incompatible types of objects,\n"
"by calling a function with the wrong type of object,\n"
"or by trying to do an operation not allowed on a given type of object.\n"
msgstr ""

#: info_generic.py:192
msgid ""
"A `ValueError` indicates that a function or an operation\n"
"received an argument of the right type, but an inappropriate value.\n"
msgstr ""

#: info_generic.py:201
msgid ""
"In Python, variables that are used inside a function are known as \n"
"local variables. Before they are used, they must be assigned a value.\n"
"A variable that is used before it is assigned a value is assumed to\n"
"be defined outside that function; it is known as a `global`\n"
"(or sometimes `nonlocal`) variable. You cannot assign a value to such\n"
"a global variable inside a function without first indicating to\n"
"Python that this is a global variable, otherwise you will see\n"
"an `UnboundLocalError`.\n"
msgstr ""

#: info_generic.py:216
msgid ""
"No information is available about this exception.\n"
msgstr ""

#: info_generic.py:222
msgid ""
"No information is available about this warning.\n"
msgstr ""

#: info_generic.py:228
msgid ""
"A `ZeroDivisionError` occurs when you are attempting to divide\n"
"a value by zero:\n"
"    `result = my_variable / 0.`\n"
"It can also happen if you calculate the remainder of a division\n"
"using the modulo operator `%`:\n"
"    `result = my_variable % 0`\n"
msgstr ""

#: info_specific.py:53
msgid ""
"In your program, the name of the\n"
"file that cannot be found is `{filename}`.\n"
msgstr ""

#: info_specific.py:75
msgid ""
"In your program, the key that cannot be found is `{key_name!r}`.\n"
msgstr ""

#: info_variables.py:30
msgid "a complex number"
msgstr ""

#: info_variables.py:32
msgid "a dictionary (`dict`)"
msgstr ""

#: info_variables.py:34
msgid "a number (`float`)"
msgstr ""

#: info_variables.py:36
msgid "an integer (`int`)"
msgstr ""

#: info_variables.py:38
msgid "a `list`"
msgstr ""

#: info_variables.py:40
msgid "a variable equal to `None` (`NoneType`)"
msgstr ""

#: info_variables.py:42
msgid "a `set`"
msgstr ""

#: info_variables.py:44
msgid "a string (`str`)"
msgstr ""

#: info_variables.py:46
msgid "a `tuple`"
msgstr ""

#: info_variables.py:442
msgid ""
"A type hint found for `{name}` in the {scope} scope.\n"
"Perhaps you had used a colon instead of an equal sign and written\n"
"\n"
"    {name} : {hint}\n"
"\n"
"instead of\n"
"\n"
"    {name} = {hint}\n"
msgstr ""

#: runtime_errors\attribute_error.py:36
msgid ""
"You are attempting to access the attribute `{attr}`\n"
"for a variable whose value is `None`."
msgstr ""

#: runtime_errors\attribute_error.py:57
msgid ""
"This should not happen:\n"
"Python tells us that module `{module}` does not have an attribute named `{attribute}`.\n"
"However, it does not appear that module `{module}` was imported.\n"
msgstr ""

#: runtime_errors\attribute_error.py:68 runtime_errors\attribute_error.py:109
#: runtime_errors\attribute_error.py:205 runtime_errors\import_error.py:105
#: runtime_errors\module_not_found_error.py:46 runtime_errors\name_error.py:54
#: runtime_errors\unbound_local_error.py:35
msgid ""
"Did you mean `{name}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:69
msgid ""
"Perhaps you meant to write `{module}.{correct}` instead of `{module}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:76 runtime_errors\attribute_error.py:212
#: runtime_errors\import_error.py:112
msgid ""
"Did you mean one of the following: `{names}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:79
msgid ""
"Instead of writing `{module}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of module `{module}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:89
msgid ""
"Did you give your program the same name as a Python module?\n"
msgstr ""

#: runtime_errors\attribute_error.py:90
msgid ""
"You imported a module named `{module}` from `{mod_path}`.\n"
"There is also a module named `{module}` in Python's standard library.\n"
"Perhaps you need to rename your module.\n"
msgstr ""

#: runtime_errors\attribute_error.py:110
msgid ""
"Perhaps you meant to use the attribute `{attribute}` of \n"
"module `{mod_name}` instead of module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:116
msgid ""
"Python tells us that no object with name `{attribute}` is\n"
"found in module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:135
msgid ""
"`{obj_name}` is a function. Perhaps you meant to write\n"
"`{obj_name}({attribute})`\n"
msgstr ""

#: runtime_errors\attribute_error.py:139
msgid ""
"Did you mean `{obj_name}({attribute})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:144
msgid ""
"`{obj_name}` is a Python built-in function or method\n"
"which does not have an attribute named `{attribute}.`\n"
msgstr ""

#: runtime_errors\attribute_error.py:185
msgid ""
"The object `{obj}` has no attribute named `{attr}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:192
msgid ""
"The following are some of its known attributes:\n"
"`{names}`."
msgstr ""

#: runtime_errors\attribute_error.py:206
msgid ""
"Perhaps you meant to write `{obj}.{correct}` instead of `{obj}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:213
msgid ""
"Instead of writing `{obj}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of object `{obj}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:230
msgid ""
"Did you mean `{known_builtin}({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:233
msgid ""
"The object `{obj_name}` has no attribute named `{attribute}`.\n"
"Perhaps you can use the Python builtin function `{known_builtin}` instead:\n"
"`{known_builtin}({obj_name})`."
msgstr ""

#: runtime_errors\attribute_error.py:259
msgid ""
"Did you mean `{attr}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:261
msgid ""
"The object `{name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:266
msgid ""
"However, `{attr}` is an attribute of `{name}` with a similar meaning.\n"
msgstr ""

#: runtime_errors\attribute_error.py:270
msgid ""
"However, `{name}` has the following attributes with similar meanings:\n"
"`{attributes}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:281
msgid ""
"Did you mean to separate object names by a comma?\n"
msgstr ""

#: runtime_errors\attribute_error.py:283
msgid ""
"`{second}` is not an attribute of `{first}`.\n"
"However, both `{first}` and `{second}` are known objects.\n"
"Perhaps you wrote a period to separate these two objects, \n"
"instead of using a comma.\n"
msgstr ""

#: runtime_errors\import_error.py:15
#: runtime_errors\module_not_found_error.py:21 runtime_errors\name_error.py:11
#: runtime_errors\unbound_local_error.py:12
msgid ""
"No information is known about this exception.\n"
"Please report this example to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
msgstr ""

#: runtime_errors\import_error.py:63
msgid ""
"You have a circular import.\n"
msgstr ""

#: runtime_errors\import_error.py:66 runtime_errors\import_error.py:98
msgid ""
"The object that could not be imported is `{name}`.\n"
"The module or package where it was \n"
"expected to be found is `{module}`.\n"
msgstr ""

#: runtime_errors\import_error.py:79
msgid ""
"Python indicated that you have a circular import.\n"
"This can occur if executing the code in module 'A'\n"
"results in executing the code in module 'B' where\n"
"an attempt to import a name from module 'A' is made\n"
"before the execution of the code in module 'A' had been completed.\n"
msgstr ""

#: runtime_errors\import_error.py:106
msgid ""
"Perhaps you meant to import `{correct}` (from `{module}`) instead of `{typo}`\n"
msgstr ""

#: runtime_errors\import_error.py:115
msgid ""
"Instead of trying to import `{typo}` from `{module}`, \n"
"perhaps you meant to import one of \n"
"the following names which are found in module `{module}`:\n"
"`{candidates}`\n"
msgstr ""

#: runtime_errors\import_error.py:134
msgid ""
"The object that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\import_error.py:174
msgid ""
"The problem was likely caused by what is known as a 'circular import'.\n"
"First, Python imported and started executing the code in file\n"
"   '{file}'.\n"
"which imports module `{last_module}`.\n"
"During this process, the code in another file,\n"
"   '{last_file}'\n"
"was executed. However in this last file, an attempt was made\n"
"to import the original module `{last_module}`\n"
"a second time, before Python had completed the first import.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:40
msgid ""
"The name of the module that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:49
msgid ""
"The following existing modules have names that are similar \n"
"to the module you tried to import: `{names}`\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:54
msgid ""
"`{name}` is an existing module that has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:36
msgid ""
"In your program, `{var_name}` is an unknown name\n"
"that had been declared as belonging in a nonlocal scope;\n"
"however, no such name could not be found.\n"
msgstr ""

#: runtime_errors\name_error.py:46
msgid ""
"In your program, `{var_name}` is an unknown name.\n"
msgstr ""

#: runtime_errors\name_error.py:56 runtime_errors\unbound_local_error.py:42
msgid ""
"Did you use a colon instead of an equal sign?\n"
msgstr ""

#: runtime_errors\name_error.py:65
msgid "I have no additional information for you."
msgstr ""

#: runtime_errors\name_error.py:79
msgid ""
"The similar name `{name}` was found in the local scope.\n"
msgstr ""

#: runtime_errors\name_error.py:80
msgid ""
"The similar name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:81
msgid ""
"The name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:82
msgid ""
"The Python builtin `{name}` has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:98 runtime_errors\unbound_local_error.py:95
msgid ""
"Instead of writing `{name}`, perhaps you meant one of the following:\n"
msgstr ""

#: runtime_errors\name_error.py:103 runtime_errors\unbound_local_error.py:99
msgid "*   Local scope: "
msgstr ""

#: runtime_errors\name_error.py:104
msgid "*   Global scope: "
msgstr ""

#: runtime_errors\name_error.py:105
msgid "*   Python builtins: "
msgstr ""

#: runtime_errors\name_error.py:145
msgid "Did you forget to add `self`?"
msgstr ""

#: runtime_errors\name_error.py:150
msgid ""
"The {scope} object `{obj}` has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}` instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:31 runtime_errors\value_error.py:29
msgid ""
"I do not recognize this case. Please report it to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
msgstr ""

#: runtime_errors\type_error.py:53 runtime_errors\type_error.py:71
msgid ""
"You tried to concatenate (add) two different types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:93
msgid ""
"You tried to add two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:100
msgid ""
"You tried to subtract two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:107
msgid ""
"You tried to multiply two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:114
msgid ""
"You tried to divide two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:121
msgid ""
"You tried to perform the bitwise operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:138
msgid ""
"Did you mean `{line}`?\n"
msgstr ""

#: runtime_errors\type_error.py:139
msgid ""
"Outside of Python, `^` is often used to indicate exponentiation.\n"
msgstr ""

#: runtime_errors\type_error.py:142
msgid ""
"Perhaps you meant `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:145
msgid ""
"You tried to perform the bit shifting operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:155
msgid ""
"You tried to exponentiate (raise to a power)\n"
"using two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:163
msgid ""
"You tried to use the operator {operator}\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
"This operator is normally used only\n"
"for multiplication of matrices.\n"
msgstr ""

#: runtime_errors\type_error.py:187
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two incompatible types of objects:\n"
"{first} and {second}\n"
msgstr ""

#: runtime_errors\type_error.py:217
msgid "Perhaps you meant to write `{operator}=` instead of `={operator}`"
msgstr ""

#: runtime_errors\type_error.py:221
msgid ""
"You tried to use the unary operator '{operator}'\n"
"with the following type of object: {obj}.\n"
"This operation is not defined for this type of object.\n"
msgstr ""

#: runtime_errors\type_error.py:240
msgid ""
"In Python, some objects are known as immutable:\n"
"once defined, their value cannot be changed.\n"
"You tried change part of such an immutable object: {obj},\n"
"most likely by using an indexing operation.\n"
msgstr ""

#: runtime_errors\type_error.py:247
msgid ""
"Did you mean to use a list?\n"
msgstr ""

#: runtime_errors\type_error.py:248
msgid ""
"Perhaps you meant to use a list instead.\n"
msgstr ""

#: runtime_errors\type_error.py:258
msgid ""
"In Python 3, exceptions must be derived from BaseException.\n"
msgstr ""

#: runtime_errors\type_error.py:289
msgid ""
"You apparently have called the function `{fn_name}` with\n"
"{nb_given} positional argument(s) while it requires {nb_required}\n"
"such positional argument(s).\n"
msgstr ""

#: runtime_errors\type_error.py:295
msgid ""
"Perhaps you forgot `self` when defining `{fn_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:311
msgid ""
"You apparently have called the function '{fn_name}' with\n"
"fewer positional arguments than it requires ({nb_required} missing).\n"
msgstr ""

#: runtime_errors\type_error.py:330
msgid ""
"Python indicates that you have an object of type `{obj_type}`,\n"
"followed by something surrounded by parentheses, `(...)`,\n"
"which Python took as an indication of a function call.\n"
"Either the object of type {obj_type} was meant to be a function,\n"
"or you forgot a comma before `(...)`.\n"
msgstr ""

#: runtime_errors\type_error.py:348
msgid ""
"Because of the surrounding parenthesis, `{fn_call}` \n"
"is interpreted by Python as indicating a function call for \n"
"`{obj_name}`, which is an object of type `{obj_type}`\n"
"which cannot be called.\n"
"\n"
msgstr ""

#: runtime_errors\type_error.py:361
msgid ""
"However, `{fn_call}` is a `tuple`.\n"
"Either the object `{obj_name}` was meant to be a function\n"
"or you have a missing comma between the object `{obj_name}`\n"
"and the tuple `{fn_call}` and meant to write\n"
"`{obj_name}, {fn_call}`.\n"
msgstr ""

#: runtime_errors\type_error.py:368
msgid ""
"Did you forget a comma between `{obj_name}` and `{fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:374
msgid ""
"However, `{obj_name}` is a sequence.\n"
"Perhaps you meant to use `[]` instead of `()` and write\n"
"`{obj_name}[{slice}]`\n"
msgstr ""

#: runtime_errors\type_error.py:379
msgid ""
"Did you mean `{obj_name}[{slice}]`?\n"
msgstr ""

#: runtime_errors\type_error.py:390
msgid ""
"However, both `{obj_name}` and `{fn_call}` are numbers.\n"
"Perhaps you forgot a multiplication operator, `*`,\n"
"and meant to write `{obj_name} * {fn_call}`\n"
"."
msgstr ""

#: runtime_errors\type_error.py:395
msgid ""
"Did you mean `{obj_name} * {fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:408
msgid ""
"You can only multiply sequences, such as list, tuples,\n"
" strings, etc., by integers.\n"
msgstr ""

#: runtime_errors\type_error.py:427 runtime_errors\type_error.py:480
msgid ""
"Did you forget to convert `{name}` into an integer?\n"
msgstr ""

#: runtime_errors\type_error.py:430
msgid ""
"Perhaps you forgot to convert `{name}` into an integer.\n"
msgstr ""

#: runtime_errors\type_error.py:434
msgid ""
"Did you forget to convert `{name1}` and `{name2}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:437
msgid ""
"Perhaps you forgot to convert `{name1}` and `{name2}` into integers.\n"
msgstr ""

#: runtime_errors\type_error.py:473
msgid ""
"You wrote an object of type `{obj}` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:483
msgid "Perhaps you forgot to convert `{name}` into an integer."
msgstr ""

#: runtime_errors\type_error.py:489
msgid ""
"Did you forget to convert `{names}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:492
msgid "Perhaps you forgot to convert `{names}` into integers."
msgstr ""

#: runtime_errors\unbound_local_error.py:46
msgid ""
"The name `{var_name}` exists in both the global and nonlocal scope.\n"
"This can be rather confusing and is not recommended.\n"
"Depending on which variable you wanted to refer to, you needed to add either\n"
"\n"
"    global {var_name}\n"
"\n"
"or\n"
"\n"
"    nonlocal {var_name}\n"
"\n"
"as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:55
msgid ""
"Did you forget to add either `global {var_name}` or \n"
"`nonlocal {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:68
msgid ""
"The name `{var_name}` exists in the {scope} scope.\n"
"Perhaps the statement\n"
"\n"
"    {scope} {var_name}\n"
"\n"
"should have been included as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:75
msgid ""
"Did you forget to add `{scope} {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:89
msgid "The similar name `{name}` was found in the local scope. "
msgstr ""

#: runtime_errors\value_error.py:43
msgid ""
"Unpacking is a convenient way to assign a name,\n"
"to each item of an iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:90 runtime_errors\value_error.py:99
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than {length}, the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:105
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:124 runtime_errors\value_error.py:134
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:140
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:35
msgid ""
"In this case, the line identified above\n"
"is more indented than expected and \n"
"does not match the indentation of the previous line.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:41
msgid ""
"In this case, the line identified above\n"
"was expected to begin a new indented block.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:46
msgid ""
"In this case, the line identified above is\n"
"less indented than the preceding one,\n"
"and is not aligned vertically with another block of code.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:120
msgid ""
"Python gave us the following informative message\n"
"about the possible cause of the error:\n"
"\n"
"    {message}\n"
"\n"
"However, I do not recognize this information and I have\n"
"to guess what caused the problem, but I might be wrong.\n"
"\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:128
msgid ""
"I make an effort below to guess what caused the problem\n"
"but I might guess incorrectly.\n"
"\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:153
msgid ""
"Currently, I cannot guess the likely cause of this error.\n"
"Try to examine closely the line indicated as well as the line\n"
"immediately above to see if you can identify some misspelled\n"
"word, or missing symbols, like (, ), [, ], :, etc.\n"
"\n"
"You might want to report this case to\n"
"https://github.com/aroberge/friendly-traceback/issues\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:105
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `>>>`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:109 syntax_errors\message_analyzer.py:505
msgid ""
"Did you use copy-paste?\n"
msgstr ""

#: syntax_errors\line_analyzer.py:135
msgid ""
"Your Python version might be too old.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:136
msgid ""
"You appear to be using the operator `:=`, sometimes called\n"
"the walrus operator. This operator requires the use of\n"
"Python 3.8 or newer. You are using version {version}.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:156
msgid ""
"You should not use the backquote character.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:157
msgid ""
"You are using the backquote character.\n"
"Either you meant to write a single quote, ', or copied Python 2 code;\n"
"in this latter case, use the function `repr(x)`."
msgstr ""

#: syntax_errors\line_analyzer.py:174 syntax_errors\message_analyzer.py:123
msgid ""
"You were trying to assign a value to the Python keyword `{keyword}`.\n"
"This is not allowed.\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:192
msgid ""
"Perhaps you meant to write `elif`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:193
msgid ""
"You likely meant to use Python's `elif` keyword\n"
"but wrote `{name}` instead\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:214
msgid ""
"You wrote something like\n"
"\n"
"    import {function} from {module}\n"
"instead of\n"
"\n"
"    from {module} import {function}\n"
"\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:234
msgid ""
"You cannot use the Python keyword `{word}` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:239
msgid ""
"You cannot use the constant `__debug__` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:263
msgid ""
"Perhaps you misplaced a quote.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:264
msgid ""
"There appears to be a Python identifier (variable name)\n"
"immediately following a string.\n"
"I suspect that you were trying to use a quote inside a string\n"
"that was enclosed in quotes of the same kind.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:285
msgid ""
"Perhaps you needed `==` instead of `=`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:286
msgid ""
"Perhaps you needed `==` or `:=` instead of `=`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:290
msgid ""
"You used an assignment operator `=` instead of an equality operator `==` \n"
"with an `{if_elif}` statement.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:296
msgid ""
"You used an assignment operator `=` instead of an equality operator `==` \n"
"with a `{while_}` statement.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:302
msgid ""
"You used an assignment operator `=`; perhaps you meant to use \n"
"an equality operator, `==`, or the walrus operator `:=`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:324
msgid ""
"Perhaps you forgot a colon `:`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:327
msgid "a class"
msgstr ""

#: syntax_errors\line_analyzer.py:328
msgid ""
"You wanted to define `{class_}`\n"
"but forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:335
msgid ""
"You wrote a `{for_while}` loop but\n"
"forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:342
msgid ""
"You wrote a statement beginning with\n"
"`{name}` but forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\line_analyzer.py:365
msgid ""
"Perhaps you forgot parentheses.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:374
msgid "a function or method"
msgstr ""

#: syntax_errors\line_analyzer.py:375
msgid ""
"You tried to define {class_or_function} and did not use the correct syntax.\n"
"The correct syntax is:\n"
"\n"
"    def name ( optional_arguments ):\n"
msgstr ""

#: syntax_errors\line_analyzer.py:386
msgid ""
"You tried to use the Python keyword `{kwd}` as a function name.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:435
msgid ""
"I am guessing that you tried to use the Python keyword\n"
"`{kwd}` as an argument in the definition of a function.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:454
msgid ""
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:469
msgid ""
"It looks as if you are attempting to use pip to install a module.\n"
"`pip` is a command that needs to run in a terminal,\n"
"not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:477
msgid ""
"Pip cannot be used in a Python interpreter.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:491
msgid ""
"You cannot have a dot `.` followed by `{bracket}`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:507
msgid ""
"It looks like you are trying to raise an exception using Python 2 syntax.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:524
msgid ""
"Valid names cannot begin with a number.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:537
msgid ""
"Perhaps you forgot a multiplication operator, `{first} * {second}`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:565
msgid ""
"Did you forget something between `{first}` and `{second}`?\n"
msgstr ""

#: syntax_errors\line_analyzer.py:569
msgid ""
"Python indicates that the error is caused by `{second}` written just after `{first}`.\n"
"Perhaps you forgot a comma or an operator, like `+`, `*`, `in`, etc., between `{first}` and `{second}`.\n"
msgstr ""

#: syntax_errors\line_analyzer.py:579
msgid ""
"Or perhaps you forgot that you cannot have spaces\n"
"in variable names.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:116
msgid "You cannot assign a value to `{keyword}`."
msgstr ""

#: syntax_errors\message_analyzer.py:119
msgid ""
"`{keyword}` is a constant in Python; you cannot assign it a value.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:139
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"conditional expression instead of the name of a variable.\n"
"A conditional expression has the following form:\n"
"\n"
"    variable = object if condition else other_object"
msgstr ""

#: syntax_errors\message_analyzer.py:162
msgid "my_function(...)"
msgstr ""

#: syntax_errors\message_analyzer.py:163
msgid "some value"
msgstr ""

#: syntax_errors\message_analyzer.py:164
msgid ""
"You wrote an expression like\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, is\n"
"a function call and not the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:176
msgid ""
"You wrote the expression\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, either is\n"
"or includes a function call and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:193
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"generator expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:206 syntax_errors\message_analyzer.py:260
msgid ""
"You wrote an expression that has an f-string\n"
"on the left-hand side of the equal sign.\n"
"An f-string should only appear on the right-hand side of the equal sign.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:224
msgid "of type `int`"
msgstr ""

#: syntax_errors\message_analyzer.py:226
msgid "of type `str`"
msgstr ""

#: syntax_errors\message_analyzer.py:228
msgid "of type `float`"
msgstr ""

#: syntax_errors\message_analyzer.py:230
msgid "of type `complex`"
msgstr ""

#: syntax_errors\message_analyzer.py:232
msgid "of type `dict`"
msgstr ""

#: syntax_errors\message_analyzer.py:234
msgid "of type `tuple`"
msgstr ""

#: syntax_errors\message_analyzer.py:236
msgid "of type `list`"
msgstr ""

#: syntax_errors\message_analyzer.py:238
msgid "of type `set`"
msgstr ""

#: syntax_errors\message_analyzer.py:269
msgid "variable_name"
msgstr ""

#: syntax_errors\message_analyzer.py:273
msgid ""
"Perhaps you meant to write:\n"
"\n"
"    {name} = {literal}\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:278
msgid "Perhaps you meant to write `{name} = {literal}`"
msgstr ""

#: syntax_errors\message_analyzer.py:299
msgid ""
"You wrote an expression like\n"
"\n"
"    {literal} = {name}\n"
"where `{literal}`, on the left-hand side of the equal sign,\n"
"is or includes an actual object {of_type}\n"
"and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:319
msgid ""
"You wrote an expression that includes some mathematical operations\n"
"on the left-hand side of the equal sign which should be\n"
"only used to assign a value to a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:326
msgid "Did you mean `{name}`?"
msgstr ""

#: syntax_errors\message_analyzer.py:327
msgid "Perhaps you meant to write `{name}` instead of `{original}`"
msgstr ""

#: syntax_errors\message_analyzer.py:354
msgid ""
"You declared `{name}` as being both a global and nonlocal variable.\n"
"A variable can be global, or nonlocal, but not both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:367
msgid ""
"The Python keyword `break` can only be used inside a for loop or inside a while loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:379
msgid ""
"The Python keyword `continue` can only be used inside a for loop or inside a while loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:405
msgid ""
"You attempted to delete a function call\n"
"\n"
"    {line}\n"
"instead of deleting the function's name\n"
"\n"
"    {correct}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:420
msgid ""
"You have defined a function repeating the keyword argument\n"
"\n"
"    {name}\n"
"twice; each keyword argument should appear only once in a function definition.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:434
msgid ""
"Did you forget a closing quote?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:435
msgid ""
"You starting writing a string with a single or double quote\n"
"but never ended the string with another quote on that line.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:447
msgid ""
"One of the following two possibilities could be the cause:\n"
"1. You meant to do a comparison with == and wrote = instead.\n"
"2. You called a function with a named argument:\n"
"\n"
"       a_function(invalid=something)\n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:465
msgid ""
"You are using a generator expression, something of the form\n"
"    `x for x in thing`\n"
"You must add parentheses enclosing that expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:478
msgid ""
"You have called a function repeating the same keyword argument.\n"
"Each keyword argument should appear only once in a function call.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:490
msgid ""
"You likely called a function with a named argument:\n"
"\n"
"   `a_function(invalid=something)`\n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:511
msgid ""
"Python indicates that you used the unicode character `{bad_character}`\n"
"which is not allowed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:517 syntax_errors\message_analyzer.py:535
msgid ""
"Did you mean to use a normal quote character, `'` or `\"`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:523
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"instead of a normal single or double quote for a string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:536
msgid ""
"Python indicates that you used some unicode characters not allowed\n"
"as part of a variable name; this includes many emojis.\n"
"However, I suspect that you used a fancy unicode quotation mark\n"
"instead of a normal single or double quote for a string.\n"
"This can happen if you copy-pasted code.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:545
msgid ""
"You likely used some unicode character that is not allowed\n"
"as part of a variable name in Python.\n"
"This includes many emojis.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:581
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}` on line {lineno}.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:586
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}`.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:597 syntax_errors\message_analyzer.py:773
msgid ""
"I will attempt to be give a bit more information.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:609
msgid ""
"Perhaps you forgot a closing quote.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:610
msgid ""
"Inside an f-string, which is a string prefixed by the letter f, \n"
"you have another string, which starts with either a\n"
"single quote (') or double quote (\"), without a matching closing one.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:629
msgid ""
"You are including the statement\n"
"\n"
"    `{newline}`\n"
"\n"
"indicating that `{name}` is a variable defined outside a function.\n"
"You are also using the same `{name}` as an argument for that\n"
"function, thus indicating that it should be variable known only\n"
"inside that function, which is the contrary of what `global` implied.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:647
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:661
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:675
msgid ""
"Did you forget to add `nonlocal`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:676
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:689
msgid ""
"You used `{name}` as a parameter for a function\n"
"before declaring it also as a nonlocal variable:\n"
"`{name}` cannot be both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:703
msgid ""
"Did you forget to write `nonlocal` first?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:705
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:717
msgid ""
"You used the nonlocal keyword at a module level.\n"
"The nonlocal keyword refers to a variable inside a function\n"
"given a value outside that function."
msgstr ""

#: syntax_errors\message_analyzer.py:731
msgid ""
"You declared the variable `{name}` as being a\n"
"nonlocal variable but it cannot be found.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:743
msgid ""
"You are using the continuation character `\\` outside of a string,\n"
"and it is followed by some other character(s).\n"
"I am guessing that you forgot to enclose some content in a string.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:762
msgid ""
"Python tells us that it reached the end of the file\n"
"and expected more content.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:793 syntax_errors\source_analyzer.py:99
msgid ""
"The closing {bracket} on line {linenumber} does not match anything.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:805
msgid ""
"In Python, you can call functions with only positional arguments\n"
"\n"
"    test(1, 2, 3)\n"
"\n"
"or only keyword arguments\n"
"\n"
"    test(a=1, b=2, c=3)\n"
"\n"
"or a combination of the two\n"
"\n"
"    test(1, 2, c=3)\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:824
msgid ""
"In Python, you can define functions with only positional arguments\n"
"\n"
"    def test(a, b, c): ...\n"
"\n"
"or only keyword arguments\n"
"\n"
"    def test(a=1, b=2, c=3): ...\n"
"\n"
"or a combination of the two\n"
"\n"
"    def test(a, b, c=3): ...\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:846
msgid ""
"Perhaps you need to type\n"
"\n"
"     print({message})\n"
"\n"
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:123
msgid ""
"The closing {bracket} on line {close_lineno} does not match the opening {open_bracket} on line {open_lineno}.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:184
msgid ""
"It is possible that you used an equal sign `=` instead of a colon `:`\n"
"to assign values to keys in a dict\n"
"before or at the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:219
msgid ""
"The opening {bracket} on line {linenumber} is not closed.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:231
msgid ""
"It is also possible that you forgot a comma between items in a tuple, \n"
"or between function arguments, \n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:238
msgid ""
"It is also possible that you forgot a comma between items in a list\n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:244
msgid ""
"It is also possible that you forgot a comma between items in a set or dict\n"
"before the position indicated by --> and ^.\n"
msgstr ""

#: syntax_errors\source_analyzer.py:265
msgid "parenthesis `(`"
msgstr ""

#: syntax_errors\source_analyzer.py:267
msgid "parenthesis `)`"
msgstr ""

#: syntax_errors\source_analyzer.py:269
msgid "square bracket `[`"
msgstr ""

#: syntax_errors\source_analyzer.py:271
msgid "square bracket `]`"
msgstr ""

#: syntax_errors\source_analyzer.py:273
msgid "curly bracket `{`"
msgstr ""

#: syntax_errors\source_analyzer.py:275
msgid "curly bracket `}`"
msgstr ""

